ffmpeg는 여러 비디오, 오디오, 그리고 다른 종류의 스트림을 다룰 수 있는 매우 강력한 도구입니다. HLS(HTTP Live Streaming)를 MP4 파일로 변환하는 작업을 수행하는 동안 ffmpeg는 몇 가지 주요 단계를 거칩니다:

1. 스트림 열기: ffmpeg는 주어진 HLS 링크에서 미디어 스트림을 열고 읽습니다.
HLS는 HTTP 기반의 스트리밍 프로토콜로, 일련의 작은 미디어 파일('chunks')로 이루어진
m3u8 플레이리스트로 작동합니다. 이 플레이리스트는 일련의 TS(Transport Stream)
파일들의 위치를 가리킵니다.

2. 스트림 읽기: 각 TS 파일은 일부의 미디어 데이터를 담고 있습니다. ffmpeg는 이 파일들을 순서대로
읽어들입니다. "Opening 'http://210.179.218.52:1935/live/250.stream/media_w756690735_7626.ts'
for reading" 와 같은 메시지는 이 단계를 나타냅니다.

3. 스트림 디코딩과 변환: 읽어들인 미디어 데이터는 원래의 코덱으로 디코딩됩니다.
그 후, 사용자가 지정한 형식과 코덱으로 변환(인코딩)됩니다.
이 경우에는 HLS 스트림을 MP4 형식으로 변환하였습니다.

4. 출력 파일 쓰기: 변환된 미디어 스트림은 출력 파일에 쓰여집니다. 이 경우에는 .mp4 파일입니다.

5. 프로세스 반복: HLS 스트리밍의 특성 상 새로운 미디어 데이터가 계속해서 생겨나므로,
이 단계들은 새로운 TS 파일이 플레이리스트에 추가될 때마다 반복됩니다.
"Non-monotonous DTS in output stream 0:0"와 같은 메시지는 이 과정에서 타임스탬프가
정확하게 일치하지 않을 때 발생할 수 있습니다.

6. 종료: 사용자가 변환 프로세스를 중단하거나 (이 경우에는 'signal 2'에 의해)
모든 미디어 데이터가 처리된 경우, ffmpeg는 변환을 완료하고 종료합니다.
"Exiting normally, received signal 2." 메시지가 이를 나타냅니다.

마지막으로, "video:23684kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB
muxing overhead: 0.141095%"는 최종적으로 생성된 파일의 정보를 보여줍니다.
이 정보에는 비디오, 오디오, 자막 등 각 스트림의 크기, 그리고 머싱
(스트림을 하나의 컨테이너에 합치는 과정) 오버헤드 등이 포함됩니다.